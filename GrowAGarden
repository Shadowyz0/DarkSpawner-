-- Load Rayfield (temp destroy to use our loading screen)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Dark Spawner",
   Icon = 0,
   LoadingTitle = "Dark Spawner",
   LoadingSubtitle = "by whqtt",
   ShowText = "Rayfield",
   Theme = "Default",
   ToggleUIKeybind = "K",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

wait(0.1)
Rayfield:Destroy()

-- Custom loading screen
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Dark Spawner Loading"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = game:GetService("CoreGui")

local Blur = Instance.new("BlurEffect")
Blur.Size = 12
Blur.Parent = game:GetService("Lighting")

local BeepSound = Instance.new("Sound")
BeepSound.SoundId = "rbxassetid://911882856"
BeepSound.Volume = 0.5
BeepSound.Parent = ScreenGui

-- Panel (Rayfield size)
local Panel = Instance.new("Frame")
Panel.Size = UDim2.new(0, 400, 0, 220)
Panel.Position = UDim2.new(0.5, -200, 0.5, -110)
Panel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Panel.BorderSizePixel = 0
Panel.Parent = ScreenGui

local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.fromRGB(0, 170, 255)
UIStroke.Thickness = 2
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke.Parent = Panel

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 8)
Corner.Parent = Panel

-- Loading label
local LoadingLabel = Instance.new("TextLabel")
LoadingLabel.Size = UDim2.new(1, -20, 0, 40)
LoadingLabel.Position = UDim2.new(0, 10, 0, 20)
LoadingLabel.BackgroundTransparency = 1
LoadingLabel.TextColor3 = Color3.new(1, 1, 1)
LoadingLabel.Font = Enum.Font.GothamBold
LoadingLabel.TextSize = 24
LoadingLabel.Text = "Loading 0%"
LoadingLabel.TextStrokeTransparency = 0.5
LoadingLabel.Parent = Panel

-- Status label
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(1, -20, 0, 30)
StatusLabel.Position = UDim2.new(0, 10, 0, 65)
StatusLabel.BackgroundTransparency = 1
StatusLabel.TextColor3 = Color3.new(1, 1, 1)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextSize = 22
StatusLabel.Text = "Initializing..."
StatusLabel.TextStrokeTransparency = 0.5
StatusLabel.Parent = Panel

-- Loading bar
local BarBackground = Instance.new("Frame")
BarBackground.Size = UDim2.new(1, -40, 0, 28)
BarBackground.Position = UDim2.new(0, 20, 0, 110)
BarBackground.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
BarBackground.BorderSizePixel = 0
BarBackground.Parent = Panel

local BarCorner = Instance.new("UICorner")
BarCorner.CornerRadius = UDim.new(0, 4)
BarCorner.Parent = BarBackground

local BarFill = Instance.new("Frame")
BarFill.Size = UDim2.new(0, 0, 1, 0)
BarFill.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
BarFill.BorderSizePixel = 0
BarFill.Parent = BarBackground

local FillCorner = Instance.new("UICorner")
FillCorner.CornerRadius = UDim.new(0, 4)
FillCorner.Parent = BarFill

-- âš  Warning label
local WarningLabel = Instance.new("TextLabel")
WarningLabel.Size = UDim2.new(1, -40, 0, 18)
WarningLabel.Position = UDim2.new(0, 20, 1, -24)
WarningLabel.AnchorPoint = Vector2.new(0, 1)
WarningLabel.BackgroundTransparency = 1
WarningLabel.TextColor3 = Color3.fromRGB(255, 180, 180)
WarningLabel.Font = Enum.Font.Gotham
WarningLabel.TextSize = 13
WarningLabel.Text = "If the Pet, Egg, Seed Spawner doesn't show, reload it"
WarningLabel.TextWrapped = true
WarningLabel.TextStrokeTransparency = 0.7
WarningLabel.TextXAlignment = Enum.TextXAlignment.Center
WarningLabel.Parent = Panel

-- Status messages
local StatusMessages = {
    "Initializing Script...",
    "Preparing Resources...",
    "Verifying Integrity...",
    "Connecting to Services...",
    "Synchronizing Data...",
    "Compiling Modules...",
    "Resolving Dependencies...",
    "Optimizing Performance...",
    "Enhancing Security...",
    "Generating Assets...",
    "Calibrating Settings...",
    "Validating Environment...",
    "Establishing Communication...",
    "Finalizing Configuration...",
    "Almost Ready...",
    "Just a Moment Longer...",
    "Putting Everything in Place...",
    "The Spawner is Almost Complete...",
    "Thank You for Waiting...",
    "Finishing Touches..."
}

-- Loop for 4 minutes and 25 seconds
local totalDuration = 265 -- seconds
local updateInterval = 1
local statusInterval = totalDuration / #StatusMessages
local elapsed = 0
local statusIndex = 1
local dotElapsed = 0
local dotCount = 0
local nextStatusUpdate = statusInterval

while elapsed < totalDuration do
    wait(updateInterval)
    elapsed += updateInterval
    dotElapsed += updateInterval

    local percent = math.floor((elapsed / totalDuration) * 100)

    -- Dot animation
    if dotElapsed >= 0.5 then
        dotElapsed = 0
        dotCount = (dotCount + 1) % 4
    end

    LoadingLabel.Text = "Loading" .. string.rep(".", dotCount) .. " " .. percent .. "%"
    BarFill.Size = UDim2.new(elapsed / totalDuration, 0, 1, 0)

    -- Update status
    if elapsed >= nextStatusUpdate and statusIndex <= #StatusMessages then
        StatusLabel.Text = StatusMessages[statusIndex]
        BeepSound:Play()
        statusIndex += 1
        nextStatusUpdate += statusInterval
    end
end

-- Cleanup
ScreenGui:Destroy()
Blur:Destroy()

-- Reload Rayfield
wait(1)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Dark Spawner",
   Icon = 0,
   LoadingTitle = "Dark Spawner",
   LoadingSubtitle = "by whqtt",
   ShowText = "Rayfield",
   Theme = "Default",
   ToggleUIKeybind = "K",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})
